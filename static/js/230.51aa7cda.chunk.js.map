{"version":3,"file":"static/js/230.51aa7cda.chunk.js","mappings":"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","sources":["components/customizePanel/CustomizePanel.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\n\r\nimport { Action } from '../../types/enums/Action';\r\n\r\nimport './customizePanel.scss';\r\n\r\nconst CustomizePanel: FC = () => {\r\n  const {\r\n    lowercase, \r\n    uppercase, \r\n    numbers, \r\n    symboles,\r\n    easy,\r\n    medium,\r\n    hard,\r\n    controled} = useSelector((state: RootState) => state.customers);\r\n    \r\n  const { length } = useSelector((state: RootState) => state.password);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLength = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    if (+e.target.value <= 50 && +e.target.value >= 0) {\r\n      dispatch({type: Action.TOGGLE_LENGTH, payload: e.target.value})\r\n    }\r\n  }\r\n\r\n  const onIncludeChange = (name: string): void => {\r\n    dispatch({type: Action.TOGGLE_CONTROLED, payload: true});\r\n\r\n    switch(name) {\r\n      case 'lowercase': \r\n        dispatch({type: Action.TOGGLE_LOWERCASE, payload: !lowercase});\r\n        break;\r\n      case 'uppercase': \r\n        dispatch({type: Action.TOGGLE_UPPERCASE, payload: !uppercase});\r\n        break;\r\n      case 'numbers': \r\n        dispatch({type: Action.TOGGLE_NUMBERS, payload: !numbers});\r\n        break;\r\n      case 'symboles': \r\n        dispatch({type: Action.TOGGLE_SYMBOLES, payload: !symboles})\r\n        break;\r\n      default: \r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  const onComplexesChanges = (name: string): void => {\r\n    dispatch({type: Action.TOGGLE_CONTROLED, payload: false});\r\n    \r\n    switch(name) {\r\n      case 'easy': \r\n      dispatch({type: Action.TOGGLE_EASY});\r\n        break;\r\n      case 'medium': \r\n        dispatch({type: Action.TOGGLE_MEDIUM});\r\n        break;\r\n      case 'hard': \r\n      dispatch({type: Action.TOGGLE_HARD});\r\n        break;\r\n      case 'controled': \r\n        dispatch({type: Action.TOGGLE_CONTROLED, payload: !controled});\r\n          break;\r\n      default: \r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"customize-panel\">\r\n      <div className=\"customize-panel__header\">\r\n        <h2 className=\"customize-panel__tittle\">Customize your password</h2>\r\n        <Link to=\"/react_password_generator/my-passwords/\" className=\"customize-panel__my-passwords\">My passwords</Link>\r\n      </div>\r\n      <div className=\"customize-panel__main\">\r\n        <div className=\"customize-panel__length-setting\">\r\n          <div \r\n              className='customize-panel__number'\r\n              >{length}</div>\r\n          <input \r\n            type=\"range\" value={length} \r\n            min=\"1\" max=\"25\"\r\n            className='customize-panel__range'\r\n            onChange={(e) => onLength(e)}/>\r\n        </div>\r\n        <div className=\"customize-panel__level-setting\">\r\n          <ul className=\"customize-panel__list\">\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"radio\" \r\n                name=\"level\" \r\n                id=\"easy\"\r\n                checked={easy} \r\n                className=\"customize-panel__radio\"\r\n                onChange={() => onComplexesChanges('easy')}/>\r\n              <label htmlFor=\"easy\" className=\"customize-panel__radio-label\">Easy</label>\r\n            </li>\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"radio\" \r\n                name=\"level\" \r\n                id=\"medium\"\r\n                checked={medium} \r\n                className=\"customize-panel__radio\"\r\n                onChange={() => onComplexesChanges('medium')}/>\r\n              <label htmlFor=\"medium\" className=\"customize-panel__radio-label\">Medium</label>\r\n            </li>\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"radio\" \r\n                name=\"level\" \r\n                id=\"hard\"\r\n                checked={hard} \r\n                className=\"customize-panel__radio\"\r\n                onChange={() => onComplexesChanges('hard')}/>\r\n              <label htmlFor=\"hard\" className=\"customize-panel__radio-label\">Hard</label>\r\n            </li>\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"radio\" \r\n                name=\"level\" \r\n                id=\"controled\"\r\n                checked={controled} \r\n                className=\"customize-panel__radio\"\r\n                onChange={() => onComplexesChanges('controled')}/>\r\n              <label htmlFor=\"controled\" className=\"customize-panel__radio-label\">Controled</label>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"customize-panel__includes-setting\">\r\n        <ul className=\"customize-panel__list\">\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"checkbox\" \r\n                name=\"lowercase\" \r\n                id=\"lowercase\" \r\n                checked={lowercase}\r\n                className='customize-panel__input'\r\n                onChange={() => onIncludeChange('lowercase')}/>\r\n              <label htmlFor=\"lowercase\" className='customize-panel__label'>lowercase</label>\r\n            </li>\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"checkbox\" \r\n                name=\"uppercase\" \r\n                id=\"uppercase\" \r\n                checked={uppercase}\r\n                className='customize-panel__input'\r\n                onChange={() => onIncludeChange('uppercase')}/>\r\n              <label htmlFor=\"uppercase\" className='customize-panel__label'>UPPERCASE</label>\r\n            </li>\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"checkbox\" \r\n                name=\"numbers\" \r\n                id=\"numbers\" \r\n                checked={numbers}\r\n                className='customize-panel__input'\r\n                onChange={() => onIncludeChange('numbers')}/>\r\n              <label htmlFor=\"numbers\" className='customize-panel__label'>12345</label>\r\n            </li>\r\n            <li className=\"customize-panel__item\">\r\n              <input \r\n                type=\"checkbox\" \r\n                name=\"symbol\" \r\n                id=\"symbol\" \r\n                checked={symboles}\r\n                className='customize-panel__input'\r\n                onChange={() => onIncludeChange('symboles')}/>\r\n              <label htmlFor=\"symbol\" className='customize-panel__label'>@#$%^&</label>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomizePanel;"],"names":["useSelector","state","customers","lowercase","uppercase","numbers","symboles","easy","medium","hard","controled","length","password","dispatch","useDispatch","onIncludeChange","name","type","Action","payload","Error","onComplexesChanges","className","to","value","min","max","onChange","e","target","onLength","id","checked","htmlFor"],"sourceRoot":""}